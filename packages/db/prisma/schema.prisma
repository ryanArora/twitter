// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

model User {
  id                String   @id @default(uuid())
  username          String   @unique
  name              String
  passwordHash      String
  profilePictureUrl String?
  createdAt         DateTime @default(now())

  sessions  Session[]
  tweets    Tweet[]
  retweets  Retweet[]
  likes     Like[]
  views     View[]
  following Follow[]  @relation("following")
  followers Follow[]  @relation("followers")
}

model Session {
  token     String   @id
  expires   DateTime
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Tweet {
  id          String   @id @default(uuid())
  content     String
  attachments String[]
  createdAt   DateTime @default(now())

  author   User   @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  replies  Tweet[] @relation("replies")
  parent   Tweet?  @relation("replies", fields: [parentId], references: [id], onDelete: Cascade)
  parentId String?

  retweets Retweet[]
  likes    Like[]
  views    View[]
}

model Retweet {
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId String

  @@id([userId, tweetId])
}

model Like {
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId String

  @@id([userId, tweetId])
}

model View {
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId String

  @@id([userId, tweetId])
}

model Follow {
  createdAt DateTime @default(now())

  follower   User   @relation("following", fields: [followerId], references: [id], onDelete: Cascade)
  followerId String

  followed   User   @relation("followers", fields: [followedId], references: [id], onDelete: Cascade)
  followedId String

  @@id([followerId, followedId])
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
